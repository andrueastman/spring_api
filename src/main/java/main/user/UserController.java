package main.user;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import javax.servlet.ServletContext;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Base64;

@Controller    // This means that this class is a Controller
@RequestMapping(path= "/user") // This means URL's start with /demo (after main.Application path)
public class UserController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;
    @Autowired
    ServletContext context;

	@RequestMapping(value = "/add", method = RequestMethod.POST , produces = "application/json")
	public @ResponseBody String addNewUser (@RequestBody User n) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
        if(n.getProfilePic() != null){
            byte[] decoded = Base64.getMimeDecoder().decode(n.getProfilePic());
            String file_name=context.getRealPath("/")+"User_"+n.getUserPhone()+"_profile.jpg";
            try {
                new FileOutputStream(file_name).write(decoded);
            } catch (IOException e) {
                e.printStackTrace();
            }
            n.setProfilePic(file_name);
        }

        if(n.getCertificateOfGoodConduct() != null){
            byte[] decoded = Base64.getMimeDecoder().decode(n.getCertificateOfGoodConduct());
            String file_name=context.getRealPath("/")+"User_"+n.getUserPhone()+"_goodConduct.jpg";
            try {
                new FileOutputStream(file_name).write(decoded);
            } catch (IOException e) {
                e.printStackTrace();
            }
            n.setCertificateOfGoodConduct(file_name);
        }

        if(n.getDrivingLicence() != null){
            byte[] decoded = Base64.getMimeDecoder().decode(n.getDrivingLicence());
            String file_name=context.getRealPath("/")+"User_"+n.getUserPhone()+"_driverLicence.jpg";
            try {
                new FileOutputStream(file_name).write(decoded);
            } catch (IOException e) {
                e.printStackTrace();
            }
            n.setDrivingLicence(file_name);
        }

        if(userRepository.existsByUserPhone(n.getUserPhone())){
            return "{  \"response\" : \"User already exists\" }";
        }
		userRepository.save(n);


		return "{  \"response\" : \"User Added\" }";
	}

	@RequestMapping(value = "/login", method = RequestMethod.POST ,produces = "application/json")
	public @ResponseBody String userLogin (@RequestBody User n) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		if(userRepository.existsByUserPhone(n.getUserPhone())){//phone number exists
			String password = userRepository.findByUserPhone(n.getUserPhone()).getUserPassword();
			if(password.equals(n.getUserPassword()))//password match
				return "{  \"response\" : \"Login Successful\" }";
			else
				return "{  \"response\" : \"Invalid password\" }";
		}

		return "{  \"response\" : \"Login unsuccessful. User does not exist \" }";
	}


	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
}
